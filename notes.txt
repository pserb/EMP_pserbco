// PSerb & Co. Paul Serbanescu, Andrew Piatetsky, Joseph Othman
// APCS pd7
// L03 - Get Empirical
// 2021-12-21
// time spent: 5+ hrs

BinSearch and LinSearch use Comparable types as inputs.
However, when trying to create and fill in a Comparable array of 1 billion, Java runs out of memory.
        Exception in thread "main" java.lang.OutOfMemoryError: Java heap space
                at java.base/java.lang.Integer.valueOf(Integer.java:1059)
                at SearchDriver.main(SearchDriver.java:32)
However, ints are much less memory intensive - you can make and populate a 1 billion length int array in
around 1.2 seconds.
Therefore, we can augment BinSearch.java and LinSearch.java to take int types as inputs, altering the code
slightly to work with ints, allowing us to run these search methods on arrays that are much much larger.

Generally, as the size of the array increased, the time at in which it took Linear Search
to find a randomized element in the array increased linearly, while the time it took for
Binary Search to find (the same) randomized element increased at a much slower rate.

When the array length was sufficiently small (in our tests, 1000 elements long), both of these tests
searched for the array almost instantly. However, as we augmented n, the time that binary search took
to search for an element remained incredibly small, whereas the linear search method took longer and
longer, and began taking much longer than Binary Search as the size of the array increased.
